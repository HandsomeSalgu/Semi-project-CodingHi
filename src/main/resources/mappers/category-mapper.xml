<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sinuedu.board.lecture.model.mapper.LectureMapper">
	<select id="selectLectureList">
		SELECT * 
		FROM LECTURE JOIN CATEGORY USING(CG_NO)
		<if test="lecNo != null"> WHERE LEC_NO = #{lecNo} </if>
		ORDER BY CG_NO, LEC_NO
	</select>

	<select id="selectImageList">
		SELECT * 
		FROM IMAGE
		<if test="lecNo != null"> WHERE REF_LEC_NO = #{lecNo} </if>
		ORDER BY IMG_NO
	</select>

	<select id="selectImage"> 
		SELECT * 
		FROM IMAGE
		WHERE REF_LEC_NO = #{lecNo} 
		ORDER BY IMG_NO 
	</select>
	
	<select id="selectCategory"> 
		SELECT * 
		FROM LECTURE JOIN CATEGORY USING(CG_NO)
		WHERE CG_NAME = #{cgName}
		ORDER BY LEC_NO
	</select>
	
	<select id="chapterCount">
		SELECT COUNT(*)
		FROM CHAPTER
		WHERE LEC_NO = #{lecNo}
	</select>
	
	<select id="selectLecture">
		SELECT *
		FROM CHAPTER
		WHERE LEC_NO = #{lecNo}
	</select>
	
	<select id="selectChapter">
		SELECT *
		FROM CHAPTER JOIN LECTURE USING(LEC_NO) JOIN CATEGORY USING(CG_NO)
		WHERE CHAP_NO = #{chapNo}
	</select>
	
	<update id="updateCount">
		UPDATE CHAPTER
		SET VIEWS = VIEWS + 1
		WHERE CHAP_NO = #{chapNo}
	</update>
	
	<select id="dupViewChapter">
		SELECT COUNT(*)
		FROM VIEW_CHAPTER
		WHERE USER_NO = #{userNo} AND CHAP_NO = #{chapNo}
	</select>
	
	<insert id="viewChapter">
		INSERT INTO VIEW_CHAPTER VALUES (#{userNo}, #{chapNo}, NULL)
	</insert>
	
	<update id="rating">
		UPDATE VIEW_CHAPTER
		SET USER_NO = #{userNo}, CHAP_NO = #{chapNo}, RATE = #{rating}
		WHERE USER_NO = #{userNo} AND CHAP_NO = #{chapNo}
	</update>
	
	<update id="chapRateAvg">
		UPDATE CHAPTER SET CHAP_RATE = (SELECT ROUND(AVG(RATE), 1) 
		FROM VIEW_CHAPTER WHERE CHAP_NO = #{chapNo})
		WHERE CHAP_NO = #{chapNo}
	</update>
	
	<!--  인기 강의 TOP 10: MySQL LIMIT으로 변환  -->
	<select id="PopularLectures"> 
		SELECT L.*, C.TOTAL_VIEWS 
		FROM LECTURE L INNER JOIN ( SELECT LEC_NO, SUM(VIEWS) AS TOTAL_VIEWS FROM CHAPTER GROUP BY LEC_NO ) C ON L.LEC_NO = C.LEC_NO 
		ORDER BY C.TOTAL_VIEWS DESC LIMIT 10
	</select>
	
	<select id="userProgressRate">
		SELECT COUNT(*)
		FROM CHAPTER JOIN VIEW_CHAPTER USING(CHAP_NO) 
		WHERE USER_NO = #{userNo} AND CHAP_NO IN (SELECT CHAP_NO FROM CHAPTER WHERE LEC_NO = #{lecNo})
	</select>
	
	<select id="countBookmark">
		SELECT COUNT(*) 
		FROM BOOKMARK_LECTURE 
		WHERE USER_NO = #{userNo} AND LEC_NO = #{lecNo}
	</select>
	
	<insert id="insertBookmark">
		INSERT
		INTO BOOKMARK_LECTURE VALUES (#{userNo}, #{lecNo})
	</insert>
	
	<delete id="deleteBookmark">
		DELETE 
		FROM BOOKMARK_LECTURE
		WHERE USER_NO = #{userNo} AND LEC_NO = #{lecNo}
	</delete>
	
	<select id="bookmarkCategory">
		SELECT * 
		FROM LECTURE JOIN BOOKMARK_LECTURE USING(LEC_NO) 
		WHERE LEC_NO = #{lecNo} AND USER_NO = #{userNo} 
		ORDER BY LEC_NO
	</select>
</mapper>
